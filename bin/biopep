#!/usr/bin/env bash

# install BIOPEP
if [ $1 == "install" ]; then
    if ! command -v docker &>/dev/null; then
        echo
        echo "BIOPEP requires docker to run, you need to install it!"
        echo "See: https://docs.docker.com/get-docker/"
        exit 1
    fi

    echo
    echo "=============== Welcome to BIOPEP installation! ================"
    echo "Visit our website (LBQC - http://www2.uesb.br/laboratorios/lbqc)"
    echo

    cp .env.example .env

    echo "See: https://salilab.org/modeller/"
    read -p "Input your MODELLER LICENSE KEY: " MODELLER_KEY
    sed -i "/^MODELLER_KEY/s/$/\"$MODELLER_KEY\"/" .env

    echo
    echo "Building docker containers..."
    docker compose up -d

    exit

# Run BIOPEP
elif [ $1 == "run" ]; then

    # check if biopep container is running
    if [ -z $(docker ps -f "name=biopep" -q) ]; then
        docker compose -p biopep start
    fi

    # Get run options
    CUT_OFF="30"
    QUERY="input/example/query.fasta"
    RECEPTOR="input/example/receptor_6lzg.pdb"
    SITE="455:B, 486:B, 493:B, 501:B, 505:B"
    TASK="task"

    shift # remove 'run' argument of getopts
    while getopts ":q:r:s:c:t:" option; do
        case $option in
        c) # Set cut off
            CUT_OFF=$OPTARG
            if [[ ! "$CUT_OFF" =~ ^[0-9]+$ ]]; then
                echo "Error: the cut off must be a number, \"$CUT_OFF\" is not a number."
                exit 1
            fi
            ;;
        q) # Set query sequences file
            QUERY=$OPTARG
            if [ ! -f $QUERY ]; then
                echo "Error: query sequences file not found \"$QUERY\"."
                exit 1
            fi
            ;;
        r) # Set receptor pdb file
            RECEPTOR=$OPTARG
            if [ ! -f $RECEPTOR ]; then
                echo "Error: receptor pdb file not found \"$RECEPTOR\"."
                exit 1
            fi
            ;;
        s) # Set site string
            SITE=$OPTARG
            ;;
        t) # Set taskname
            TASK=$OPTARG
            ;;
        \?) # Invalid option
            echo "Error: Invalid option"
            exit 1
            ;;
        esac
    done

    # execute BIOPEP
    docker exec -it biopep \
        conda run -n biopep-env /bin/bash -c \
        "python -u main.py \"$QUERY\" \"$RECEPTOR\" \"$SITE\" \"$CUT_OFF\" \"$TASK\""

    exit

# Invalid argument
else
    echo "Error: invalid argument \"$1\""
    exit 1
fi
